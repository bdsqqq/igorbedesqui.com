{
    "title": "Onde está a ISS?",
    "description": "Um simples web app que te diz onde está a Estação Espacial Internacional — feito por Igor Bedesqui",

    "heroTitle" : "Onde está a <b>ISS</b>?",
    "heroSubHead": "(No espaço, provavelmente, mas não conta pra ninguém)",

    "01Thin": "Why?",
    "01Copy": "Years ago I fell in love with coding by watching <a1>Daniel Shiffman's youtube channel</a1>, following along with <a2>his series about Data and APIs<a2> I created the website that got me my first job interview. This project is an update for that website and a lesson on prioritizing and focusing on the outcome, it started as me trying to replicate the layout of an asset I saw on ibm.com but it quickly transformed into a side project that reflects the quality of the work I do. Instead of adding as many animations, features, and info as possible, I choose to focus on functionality, simplicity, and aesthetics.",

    "02Thin": "Challenges",
    "02Copy": {
        "01_title": "Request limitations",
        "01_content": "Using data from a third party, I had a couple of limitations. The most important of them was that I could only make one request per second to the API across all clients, meaning that if enough people visited the website simultaneously, I would quickly exceed my API quota. This problem called for a simple solution; creating a serverless cache layer to store recent data and distribute it or refresh it when appropriate is something I had never done before but had fun implementing. Using a blazing fast cache like Redis on <a3>Upstash<a3> allowed me to deliver an almost instant experience to users while keeping the number of requests to an external API in check.<br /> <br />While server-side challenges are something I don't deal with that much, this one taught me a pattern that I'm sure I'll use in the future. Also, if you're a nerd, here's a diagram of the cache logic. It's simple but effective stuff.",
        "01_imgAlt": "Flow diagram of caching logic",

        "02_title": "Incremental enhacement",
        "02_content": "While experimenting with the UI, I came across problems with browser support, firefox didn't allow me to use some filter features to blur the content behind a div. While I could've just dropped the idea, I took this opportunity to use a pattern called Incremental Enhancement. Using the \"@supports\" query in CSS, I applied specific styles only on browsers that supported a specific feature. This allowed me to deliver the experience I wanted to users with cutting-edge browsers without sacrificing the experience of any user.",
        "02_img01_caption": "The UI in browsers that support filter properties blurs elements behind it.",
        "02_img02_caption": "While the UI in browsers that don't support filters, fallbacks into a solid color."
    },

    "03Thin": "Results",
    "03Copy": "While I still plan to do small updates to this project, I consider it done. I love how this tiny piece of user experience— load page, see location—allowed me to learn, practice and experiment so much.<br/ ><br/ >To witness me losing my mind, changing scope, and having fun, take a look at the <a4>commit history of the project<a4>. and If you just want to see it in action, <a5>here it is</a5>",
    "03_imgAlt": "Website screenshot"
}